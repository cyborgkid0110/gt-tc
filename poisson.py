import numpy as np
import matplotlib.pyplot as plt
from matplotlib.collections import PatchCollection
from scipy.stats import qmc

num_nodes = 200
rng = np.random.default_rng()
radius = 30
engine = qmc.PoissonDisk(d=2, radius=radius, rng=rng, ncandidates=num_nodes, l_bounds=0, u_bounds=500)
sample = engine.random(num_nodes)

print(sample[0, 1])
res = num_nodes - len(sample)
while (res > 0):
    print("Generated by random")
    # np.round(np.random.uniform(a, b, (1, 2)), 2)
    row = np.round(np.random.rand(1, 2), 2)
    sample = np.append(sample, row, axis=0)
    res -= 1

fig, ax = plt.subplots()
_ = ax.scatter(sample[:, 0], sample[:, 1])
circles = [plt.Circle((xi, yi), radius=radius * 2, fill=False)
           for xi, yi in sample]
collection = PatchCollection(circles, match_original=True)
ax.add_collection(collection)
_ = ax.set(aspect='equal', xlabel=r'$x_1$', ylabel=r'$x_2$',
           xlim=[0, 500], ylim=[0, 500])
plt.show()